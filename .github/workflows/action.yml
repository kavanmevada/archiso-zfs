on: [push, pull_request]

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: Build on ubuntu-latest aarch64
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
    - run: mkdir -p artifacts
    - run: sudo apt-get install gcc-aarch64-linux-gnu --assume-yes
    - run: git clone --quiet --depth=1 https://github.com/torvalds/linux
    - run: |
        cp arch/arm/configs/bcm2835_defconfig arch/arm64/configs/bcm2835_defconfig
        echo 'CONFIG_ARM_LPAE=y' >> arch/arm64/configs/bcm2835_defconfig
        echo 'CONFIG_DRM_VC4=y' >> arch/arm64/configs/bcm2835_defconfig
        echo 'CONFIG_DRM_V3D=y' >> arch/arm64/configs/bcm2835_defconfig
        echo 'CONFIG_USB_DWC3=y' >> arch/arm64/configs/bcm2835_defconfig
        echo 'CONFIG_USB_DWC2=y' >> arch/arm64/configs/bcm2835_defconfig
        echo 'CONFIG_EXFAT_FS=y' >> arch/arm64/configs/bcm2835_defconfig
        echo 'CONFIG_FAT_FS=y' >> arch/arm64/configs/bcm2835_defconfig
        echo 'CONFIG_NFSD=y' >> arch/arm64/configs/bcm2835_defconfig
        echo 'CONFIG_NFS_FS=y' >> arch/arm64/configs/bcm2835_defconfig
          
        make ARCH=arm64 bcm2835_defconfig
        echo $(make kernelversion)

        make -j128 ARCH=arm64 \
            CROSS_COMPILE=aarch64-linux-gnu- \
            CXXFLAGS="-march=armv8-a+crc -mtune=cortex-a72" \
            CFLAGS="-march=armv8-a+crc -mtune=cortex-a72" \
            Image.gz modules dtbs

        mkdir artifacts && make INSTALL_MOD_PATH=artifacts modules_install
        cp arch/arm64/boot/Image.gz artifacts/boot/kernel8.img

      working-directory: linux

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Kernel Artifacts
        path: linux/artifacts
