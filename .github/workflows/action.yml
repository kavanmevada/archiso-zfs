on: [push, pull_request]

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: Build on ubuntu-latest aarch64
    steps:
      - name: Run commands
        run: |
          uname -a
          echo ::set-output name=uname::$(uname -a)
          DEBIAN_FRONTEND=noninteractive
          apt update -qq -o=Dpkg::Use-Pty=0 > /dev/null && apt-get install -qq -o=Dpkg::Use-Pty=0 curl crossbuild-essential-arm64 gcc-aarch64-linux-gnu subversion git build-essential linux-source bc kmod cpio flex libncurses5-dev libelf-dev libssl-dev dwarves bison -y > /dev/null
          git clone --quiet --depth=1 https://github.com/torvalds/linux && cd linux
          curl -L https://raw.githubusercontent.com/raspberrypi/linux/rpi-5.15.y/arch/arm/configs/bcm2711_defconfig --output ./arch/arm64/configs/bcm2711_defconfig
          curl -L https://raw.githubusercontent.com/raspberrypi/linux/rpi-5.15.y/arch/arm/boot/dts/Makefile --output /tmp/Makefile
          tail -n 10 /tmp/Makefile >> ./arch/arm/boot/dts/Makefile
          mkdir /tmp/linux && git clone --depth=1 https://github.com/raspberrypi/linux /tmp/linux
          cp -r /tmp/linux/arch/arm/boot/dts/overlays ./arch/arm/boot/dts
          ln -s ../../../arm/boot/dts/overlays arch/arm64/boot/dts/overlays

          export KERNEL=kernel8
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bcm2711_defconfig
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j5 Image.gz modules dtbs
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j5 bindeb-pkg

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with: 
          name: assets-for-download
          path: ../linux*.deb
