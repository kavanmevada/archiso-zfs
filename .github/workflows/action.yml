on: [push, pull_request]

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build on ubuntu-18.04 aarch64
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
            DEBIAN_FRONTEND=noninteractive
            apt update && apt-get install -qq -o=Dpkg::Use-Pty=0 curl git build-essential linux-source bc kmod cpio flex libncurses5-dev libelf-dev libssl-dev dwarves -y
            git clone --quiet --depth=1 https://github.com/torvalds/linux && cd linux
            curl -L https://raw.githubusercontent.com/raspberrypi/linux/rpi-5.15.y/arch/arm/configs/bcm2711_defconfig --output ./arch/arm/configs/bcm2711_defconfig
            curl -L https://raw.githubusercontent.com/raspberrypi/linux/rpi-5.15.y/arch/arm/boot/dts/Makefile --output /tmp/Makefile
            tail -n 10 /tmp/Makefile >> ./arch/arm/boot/dts/Makefile
            ln -s arch/arm64/boot/dts/overlays ../../../arm/boot/dts/overlays

            export KERNEL=kernel8
            make bcm2711_defconfig
            make -j`nproc` Image.gz modules dtbs
            make -j`nproc` bindeb-pkg

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with: 
          name: assets-for-download
          path: ../linux*.deb
