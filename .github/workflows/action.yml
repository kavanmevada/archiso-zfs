on: [push, pull_request]

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: Build on ubuntu-latest aarch64
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
    - run: mkdir -p artifacts
    - run: sudo apt-get install gcc-aarch64-linux-gnu --assume-yes
    - run: git clone --depth=1 -b rpi-6.0.y https://github.com/raspberrypi/linux.git
    - run: |
        function __rep_app() {
            if ! sed -i "/$2/{s//$3/;h};"'${x;/./{x;q0};x;q1}' $1; then echo "$3" >> $1; fi
        }
        
        # curl -L https://raw.githubusercontent.com/raspberrypi/linux/rpi-5.15.y/arch/arm/configs/bcm2711_defconfig --output arch/arm64/configs/bcm2711_defconfig
        
        # __rep_app "arch/arm64/configs/bcm2835_defconfig" "CONFIG_DRM_VC4=m" "CONFIG_DRM_VC4=y"
        # __rep_app "arch/arm64/configs/bcm2835_defconfig" "CONFIG_DRM_V3D=m" "CONFIG_DRM_V3D=y"
        # __rep_app "arch/arm64/configs/bcm2835_defconfig" "CONFIG_USB_DWC3=m" "CONFIG_USB_DWC3=y"
        # __rep_app "arch/arm64/configs/bcm2835_defconfig" "CONFIG_USB_DWC2=m" "CONFIG_USB_DWC2=y"
        
        # __rep_app "arch/arm64/configs/bcm2835_defconfig" "CONFIG_EXFAT_FS=m" "CONFIG_EXFAT_FS=y"
        # __rep_app "arch/arm64/configs/bcm2835_defconfig" "CONFIG_FAT_FS=m" "CONFIG_FAT_FS=y"
        
        # __rep_app "arch/arm64/configs/bcm2835_defconfig" "CONFIG_NFSD=m" "CONFIG_NFSD=y"
        # __rep_app "arch/arm64/configs/bcm2835_defconfig" "CONFIG_NFS_FS=m" "CONFIG_NFS_FS=y"
        # __rep_app "arch/arm64/configs/bcm2835_defconfig" "CONFIG_ARM_LPAE=m" "CONFIG_ARM_LPAE=y"
          
        make ARCH=arm64 bcm2711_defconfig
        echo "Building: $(make kernelversion)"
        scripts/config --disable DEBUG_INFO

        make ARCH=arm64 Image.gz modules dtbs bindeb-pkg

        mkdir -p artifacts/boot/overlays && make INSTALL_MOD_PATH=artifacts modules_install
        cp arch/arm64/boot/dts/broadcom/*.dtb artifacts/boot/
        cp arch/arm64/boot/dts/overlays/*.dtb* artifacts/boot/overlays/
        cp arch/arm64/boot/dts/overlays/README artifacts/boot/overlays/
        cp arch/arm64/boot/Image.gz artifacts/boot/
        cp ../*.deb artifacts

      working-directory: linux

    - name: Tar files
      run: tar -czvf artifacts.tar.gz linux/artifacts

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: kernel-artifact
        path: |
          artifacts.tar.gz
          artifacts/*.deb
